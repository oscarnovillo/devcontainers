version: '3.8'

services:
  php-clima-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        WEATHER_API_KEY: ${WEATHER_API_KEY:-demo_key}
    container_name: php-clima-app
    ports:
      - "8080:80"
    volumes:
      # Montar c√≥digo fuente para desarrollo
      - .:/var/www/html
      - php_logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=development
      - LOG_LEVEL=debug
      - WEATHER_API_KEY=${WEATHER_API_KEY:-demo_key}
    networks:
      - clima-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api.php?action=health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Opcional: Base de datos MySQL para futuras funcionalidades
  mysql:
    image: mysql:8.0
    container_name: php-clima-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: clima_app
      MYSQL_USER: clima_user
      MYSQL_PASSWORD: clima_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - clima-network
    restart: unless-stopped
    profiles:
      - with-db

  # Opcional: Redis para cache
  redis:
    image: redis:7-alpine
    container_name: php-clima-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - clima-network
    restart: unless-stopped
    profiles:
      - with-cache
    command: redis-server --appendonly yes

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: php-clima-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - nginx_logs:/var/log/nginx
    depends_on:
      - php-clima-app
    networks:
      - clima-network
    restart: unless-stopped
    profiles:
      - with-nginx

volumes:
  php_logs:
    driver: local
  mysql_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  clima-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
