name: Rust CI with Cargo and Docker

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Definimos variables para versionado usando secretos o variables de GitHub
    env:
      MAJOR_VERSION: ${{ vars.MAJOR_VERSION || '1' }}
      MINOR_VERSION: ${{ vars.MINOR_VERSION || '0' }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Change to application directory
      run: cd applicacionRust/clima_app
      
    - name: Build with Cargo
      run: cd applicacionRust/clima_app && cargo build --release

    - name: Run tests
      run: cd applicacionRust/clima_app && cargo test
      
    - name: Run Clippy (linting)
      run: cd applicacionRust/clima_app && cargo clippy -- -D warnings
      
    - name: Check formatting
      run: cd applicacionRust/clima_app && cargo fmt --check
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
          
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # Genera la versión usando las variables de entorno y el número de ejecución del workflow    
    - name: Set version
      id: version
      run: echo "VERSION=${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${{ github.run_number }}" >> $GITHUB_OUTPUT
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./applicacionRust/clima_app
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/clima-app-rust:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/clima-app-rust:${{ steps.version.outputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      run: echo "Image pushed with digest ${{ steps.docker_build.outputs.digest }}"
