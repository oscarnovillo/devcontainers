name: Node.js CI with npm and Docker

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Definimos variables para versionado usando secretos o variables de GitHub
    env:
      MAJOR_VERSION: ${{ vars.MAJOR_VERSION || '1' }}
      MINOR_VERSION: ${{ vars.MINOR_VERSION || '0' }}

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: aplicacionNode/package-lock.json
        
    - name: Install dependencies
      run: |
        cd aplicacionNode
        npm ci
        
    - name: Run linting
      run: |
        cd aplicacionNode
        npm run lint
        
    - name: Check code formatting
      run: |
        cd aplicacionNode
        npm run format:check
        
    - name: Run tests
      run: |
        cd aplicacionNode
        # Crear archivo de test básico si no existe
        mkdir -p test
        echo "const app = require('../app');" > test/app.test.js
        echo "console.log('Test passed: app loads successfully');" >> test/app.test.js
        node test/app.test.js
        
    - name: Build application (if applicable)
      run: |
        cd aplicacionNode
        # Si tienes un script de build, descomenta la siguiente línea
        # npm run build
        echo "No build step required for this application"
        
    # Solo ejecutar Docker build en Node.js 18 para evitar duplicados
    - name: Set up Docker Buildx
      if: matrix.node-version == '18.x'
      uses: docker/setup-buildx-action@v3
          
    - name: Login to Docker Hub
      if: matrix.node-version == '18.x'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # Genera la versión usando las variables de entorno y el número de ejecución del workflow    
    - name: Set version
      if: matrix.node-version == '18.x'
      id: version
      run: echo "VERSION=${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${{ github.run_number }}" >> $GITHUB_OUTPUT
        
    - name: Build and push Docker image
      if: matrix.node-version == '18.x'
      uses: docker/build-push-action@v5
      with:
        context: ./aplicacionNode
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/clima-app-node:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/clima-app-node:${{ steps.version.outputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      if: matrix.node-version == '18.x'
      run: echo "Image pushed with digest ${{ steps.docker_build.outputs.digest }}"
