name: Rust CI with Cargo and Docker

on:
  push:
    branches: [ "main" ]
    paths:
      - 'applicacionRust/**'
      - '.github/workflows/rust.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'aplicacionRust/**'
      - '.github/workflows/rust.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Definimos variables para versionado usando secretos o variables de GitHub
    env:
      MAJOR_VERSION: ${{ vars.RUST_MAJOR_VERSION || '1' }}
      MINOR_VERSION: ${{ vars.RUST_MINOR_VERSION || '0' }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        components: rustfmt, clippy

    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          aplicacionRust/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    # - name: Check formatting
    #   run: |
    #     cd aplicacionRust
    #     cargo fmt --all -- --check

    # - name: Run clippy
    #   run: |
    #     cd aplicacionRust
    #     cargo clippy -- -D warnings

    - name: Build
      run: |
        cd aplicacionRust
        cargo build --release

    # - name: Run tests
    #   run: |
    #     cd aplicacionRust
    #     cargo test
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
          
    - name: Login to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # Genera la versión usando las variables de entorno y el número de ejecución del workflow    
    - name: Set version
      id: version
      run: echo "VERSION=${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.${{ github.run_number }}" >> $GITHUB_OUTPUT
        
    - name: Build and push Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v5
      with:
        context: ./aplicacionRust
        push: true
        build-args: |
          WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/clima-app-rust:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/clima-app-rust:${{ steps.version.outputs.VERSION }}
