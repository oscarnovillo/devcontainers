name: PHP Application

on:
  push:
    branches: [main, develop]
    paths:
      - 'aplicacionPhp/**'
      - '.github/workflows/php.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'aplicacionPhp/**'
      - '.github/workflows/php.yml'

env:
  PHP_VERSION: '8.1'
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json, curl
          coverage: xdebug
          tools: composer:v2
      
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        working-directory: ./aplicacionPhp
      
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction
        working-directory: ./aplicacionPhp
      
      - name: Copy environment file
        run: cp .env.example .env
        working-directory: ./aplicacionPhp
      
      # - name: Run PHPStan (Static Analysis)
      #   run: composer run-script phpstan
      #   working-directory: ./aplicacionPhp
      
      # - name: Check code style (PHP-CS-Fixer)
      #   run: composer run-script cs-check
      #   working-directory: ./aplicacionPhp
      
      # - name: Run tests with coverage
      #   run: composer run-script test-coverage
      #   working-directory: ./aplicacionPhp
      #   env:
      #     WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
      
      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: ./aplicacionPhp/coverage.xml
      #     flags: php
      #     name: php-${{ matrix.php-version }}

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, ctype, iconv, intl, curl
          tools: composer:v2
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
        working-directory: ./aplicacionPhp
      
      - name: Run security audit
        run: composer audit
        working-directory: ./aplicacionPhp

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.actor }}/php-clima-app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./aplicacionPhp
          file: ./aplicacionPhp/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Run Docker container test
        run: |
          docker run --rm \
            -e WEATHER_API_KEY="${{ secrets.WEATHER_API_KEY }}" \
            -p 8080:80 \
            --name php-clima-test \
            -d ghcr.io/${{ github.actor }}/php-clima-app:latest
          
          # Wait for container to be ready
          sleep 10
          
          # Test health endpoint
          curl -f http://localhost:8080/api.php?action=health || exit 1
          
          # Test weather endpoint
          curl -f "http://localhost:8080/api.php?action=weather&location=Madrid" || exit 1
          
          # Stop container
          docker stop php-clima-test

  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
      - name: Deploy notification
        run: |
          echo "ðŸš€ PHP application ready for deployment"
          echo "Image: ghcr.io/${{ github.repository }}/php-clima-app:latest"
          echo "Built from commit: ${{ github.sha }}"
